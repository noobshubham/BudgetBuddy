// Generated by view binder compiler. Do not edit!
package com.example.budgetbuddy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetbuddy.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerItemViewBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView transactionDate;

  @NonNull
  public final ImageView transactionIconView;

  @NonNull
  public final TextView transactionMode;

  @NonNull
  public final TextView transactionTextAmount;

  @NonNull
  public final TextView transactionTextTitle;

  private RecyclerItemViewBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView transactionDate, @NonNull ImageView transactionIconView,
      @NonNull TextView transactionMode, @NonNull TextView transactionTextAmount,
      @NonNull TextView transactionTextTitle) {
    this.rootView = rootView;
    this.transactionDate = transactionDate;
    this.transactionIconView = transactionIconView;
    this.transactionMode = transactionMode;
    this.transactionTextAmount = transactionTextAmount;
    this.transactionTextTitle = transactionTextTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.transaction_date;
      TextView transactionDate = ViewBindings.findChildViewById(rootView, id);
      if (transactionDate == null) {
        break missingId;
      }

      id = R.id.transaction_icon_view;
      ImageView transactionIconView = ViewBindings.findChildViewById(rootView, id);
      if (transactionIconView == null) {
        break missingId;
      }

      id = R.id.transaction_mode;
      TextView transactionMode = ViewBindings.findChildViewById(rootView, id);
      if (transactionMode == null) {
        break missingId;
      }

      id = R.id.transaction_text_amount;
      TextView transactionTextAmount = ViewBindings.findChildViewById(rootView, id);
      if (transactionTextAmount == null) {
        break missingId;
      }

      id = R.id.transaction_text_title;
      TextView transactionTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (transactionTextTitle == null) {
        break missingId;
      }

      return new RecyclerItemViewBinding((MaterialCardView) rootView, transactionDate,
          transactionIconView, transactionMode, transactionTextAmount, transactionTextTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
