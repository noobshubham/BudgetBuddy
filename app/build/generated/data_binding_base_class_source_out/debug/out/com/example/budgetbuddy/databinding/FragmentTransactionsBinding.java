// Generated by view binder compiler. Do not edit!
package com.example.budgetbuddy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetbuddy.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransactionsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FloatingActionButton addExpense;

  @NonNull
  public final RecyclerView fragmentRecyclerView;

  @NonNull
  public final TextView fragmentShowMore;

  @NonNull
  public final LinearLayout linearLayoutSummary;

  @NonNull
  public final LinearProgressIndicator linearProgressBar;

  @NonNull
  public final MaterialTextView totalExpense;

  @NonNull
  public final CardView transactionsCard;

  private FragmentTransactionsBinding(@NonNull RelativeLayout rootView,
      @NonNull FloatingActionButton addExpense, @NonNull RecyclerView fragmentRecyclerView,
      @NonNull TextView fragmentShowMore, @NonNull LinearLayout linearLayoutSummary,
      @NonNull LinearProgressIndicator linearProgressBar, @NonNull MaterialTextView totalExpense,
      @NonNull CardView transactionsCard) {
    this.rootView = rootView;
    this.addExpense = addExpense;
    this.fragmentRecyclerView = fragmentRecyclerView;
    this.fragmentShowMore = fragmentShowMore;
    this.linearLayoutSummary = linearLayoutSummary;
    this.linearProgressBar = linearProgressBar;
    this.totalExpense = totalExpense;
    this.transactionsCard = transactionsCard;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transactions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransactionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_expense;
      FloatingActionButton addExpense = ViewBindings.findChildViewById(rootView, id);
      if (addExpense == null) {
        break missingId;
      }

      id = R.id.fragment_recycler_view;
      RecyclerView fragmentRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (fragmentRecyclerView == null) {
        break missingId;
      }

      id = R.id.fragment_show_more;
      TextView fragmentShowMore = ViewBindings.findChildViewById(rootView, id);
      if (fragmentShowMore == null) {
        break missingId;
      }

      id = R.id.linear_layout_summary;
      LinearLayout linearLayoutSummary = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutSummary == null) {
        break missingId;
      }

      id = R.id.linear_progress_bar;
      LinearProgressIndicator linearProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (linearProgressBar == null) {
        break missingId;
      }

      id = R.id.total_expense;
      MaterialTextView totalExpense = ViewBindings.findChildViewById(rootView, id);
      if (totalExpense == null) {
        break missingId;
      }

      id = R.id.transactions_card;
      CardView transactionsCard = ViewBindings.findChildViewById(rootView, id);
      if (transactionsCard == null) {
        break missingId;
      }

      return new FragmentTransactionsBinding((RelativeLayout) rootView, addExpense,
          fragmentRecyclerView, fragmentShowMore, linearLayoutSummary, linearProgressBar,
          totalExpense, transactionsCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
